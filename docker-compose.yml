version: '3.4'

services:
  jenkins:
    image: jamessmith52963/jenkins:lts
    entrypoint: ["/sbin/tini", "--", "/usr/local/bin/jenkins-init.sh"] 
    deploy:
      replicas: 1
      restart_policy: 
        condition: any
      placement:
        constraints:
           - node.hostname == default
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/bin/docker
    ports:
      - 8081:8080
      - 50001:5000
    configs:
      - source: jenkins-init.sh
        target: /usr/local/bin/jenkins-init.sh
        mode: 0777
  sonar:
    image: sonarqube:lts-alpine
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/postgres
    ports:
      - 9000:9000
      - 9002:9002
    volumes:
      - sonar_data:/opt/sonarqube/data
  postgres:
    image: postgres:10-alpine
    environment:
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_USER=sonar
      - PGDATA=/var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
        - pg_data:/var/lib/postgresql/data
    
volumes:
  jenkins_data:
    driver: local
  pg_data:
    driver: local
  sonar_data:
    driver: local

configs:
  jenkins-init.sh:
    file: ./jenkins-init.sh
